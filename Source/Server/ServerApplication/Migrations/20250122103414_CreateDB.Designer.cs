// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServerApplication.Model;

#nullable disable

namespace ServerApplication.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250122103414_CreateDB")]
    partial class CreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServerApplication.Model.Message", b =>
                {
                    b.Property<int>("message_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("message_id"));

                    b.Property<int?>("group_id")
                        .HasColumnType("integer");

                    b.Property<string>("message_text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("message_timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("message_id");

                    b.HasIndex("group_id");

                    b.HasIndex("user_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("ServerApplication.Model.Privilege", b =>
                {
                    b.Property<int>("privilege_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("privilege_id"));

                    b.Property<string>("privilege_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("privilege_id");

                    b.ToTable("privileges");
                });

            modelBuilder.Entity("ServerApplication.Model.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_banned")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("privilege_id")
                        .HasColumnType("integer");

                    b.Property<bool>("reset_pw")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("privilege_id");

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("ServerApplication.Model.UserGroup", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("group_id"));

                    b.Property<string>("group_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("group_id");

                    b.ToTable("usergroups");
                });

            modelBuilder.Entity("ServerApplication.Model.UserGroupMember", b =>
                {
                    b.Property<int>("group_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("group_id", "user_id");

                    b.HasIndex("user_id");

                    b.ToTable("usergroupmembers");
                });

            modelBuilder.Entity("ServerApplication.Model.Message", b =>
                {
                    b.HasOne("ServerApplication.Model.UserGroup", "group")
                        .WithMany("messages")
                        .HasForeignKey("group_id");

                    b.HasOne("ServerApplication.Model.User", "user")
                        .WithMany("messages")
                        .HasForeignKey("user_id");

                    b.Navigation("group");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ServerApplication.Model.User", b =>
                {
                    b.HasOne("ServerApplication.Model.Privilege", "privilege")
                        .WithMany("users")
                        .HasForeignKey("privilege_id");

                    b.Navigation("privilege");
                });

            modelBuilder.Entity("ServerApplication.Model.UserGroupMember", b =>
                {
                    b.HasOne("ServerApplication.Model.UserGroup", null)
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApplication.Model.User", null)
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApplication.Model.Privilege", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("ServerApplication.Model.User", b =>
                {
                    b.Navigation("messages");
                });

            modelBuilder.Entity("ServerApplication.Model.UserGroup", b =>
                {
                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}
